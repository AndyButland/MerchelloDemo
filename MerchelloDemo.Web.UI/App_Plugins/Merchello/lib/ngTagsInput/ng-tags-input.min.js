!function(){"use strict";angular.module("tags-input",[]).directive("tagsInput",["$interpolate",function(a){function b(b,c){function d(d,e){return c[d]?a(c[d])(b.$parent):e}function e(a,b){var c=d(a,null);return c?parseInt(c,10):b}function f(a,b){var c=d(a,null);return c?"true"===c:b}b.options={cssClass:d("ngClass",""),placeholder:d("placeholder","Add a tag"),tabindex:e("tabindex",""),removeTagSymbol:d("removeTagSymbol",String.fromCharCode(215)),replaceSpacesWithDashes:f("replaceSpacesWithDashes",!0),minLength:e("minLength",3),maxLength:e("maxLength",""),addOnEnter:f("addOnEnter",!0),addOnSpace:f("addOnSpace",!1),addOnComma:f("addOnComma",!0),allowedTagsPattern:new RegExp(d("allowedTagsPattern","^[a-zA-Z0-9\\s]+$")),enableEditingLastTag:f("enableEditingLastTag",!1)}}return{restrict:"A,E",scope:{tags:"=ngModel"},replace:!1,template:'<div class="ngTagsInput {{ options.cssClass }}">  <ul>    <li ng-repeat="tag in tags" ng-class="getCssClass($index)">      <span>{{ tag }}</span>      <button type="button" ng-click="remove($index)">{{ options.removeTagSymbol }}</button>    </li>  </ul>  <input type="text" placeholder="{{ options.placeholder }}" size="{{ options.placeholder.length }}" maxlength="{{ options.maxLength }}" tabindex="{{ options.tabindex }}" ng-model="newTag"></div>',controller:["$scope","$attrs",function(a,c){b(a,c),a.newTag="",a.tags=a.tags||[],a.tryAdd=function(){var b=!1,c=a.newTag;return c.length>=a.options.minLength&&a.options.allowedTagsPattern.test(c)&&(a.options.replaceSpacesWithDashes&&(c=c.replace(/\s/g,"-")),-1===a.tags.indexOf(c)&&a.tags.push(c),a.newTag="",b=!0),b},a.tryRemoveLast=function(){var b=!1;return a.tags.length>0&&(a.options.enableEditingLastTag?a.newTag=a.tags.pop():a.shouldRemoveLastTag?(a.tags.pop(),a.shouldRemoveLastTag=!1):a.shouldRemoveLastTag=!0,b=!0),b},a.remove=function(b){a.tags.splice(b,1)},a.getCssClass=function(b){var c=b===a.tags.length-1;return a.shouldRemoveLastTag&&c?"selected":""},a.$watch(function(){return a.newTag.length>0},function(){a.shouldRemoveLastTag=!1})}],link:function(a,b){var c=13,d=188,e=32,f=8;b.find("input").bind("keydown",function(b){b.keyCode===c&&a.options.addOnEnter||b.keyCode===d&&a.options.addOnComma||b.keyCode===e&&a.options.addOnSpace?(a.tryAdd()&&a.$apply(),b.preventDefault()):b.keyCode===f&&0===this.value.length&&a.tryRemoveLast()&&(a.$apply(),b.preventDefault())}),b.find("div").bind("click",function(){b.find("input")[0].focus()})}}}])}();